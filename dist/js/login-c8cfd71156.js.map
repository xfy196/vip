{"version":3,"sources":["login.js"],"names":["$","on","this","addClass","siblings","removeClass","index","eq","click","valid","ajax","one","ipts","ele","get","parent","show","find","val","trim","html","validator","addMethod","value","element","optional","test","validate","rules","username","required","format","password","messages","errorPlacement","error","errorText","innerHTML","css","borderColor","children","unhighlight","hide"],"mappings":"AAAA,aAMEA,EAAE,WAkBAA,EAAE,iBAAiBC,GAAG,QAAS,WAC7BD,EAAEE,MAAMC,SAAS,UAAUC,WAAWC,YAAY,UAElD,IAAIC,EAAQN,EAAE,iBAAiBM,MAAMN,EAAEE,OACvCF,EAAE,kBAAkBG,SAAS,UAAUI,GAAGD,GAAOD,YAAY,YAM/DL,EAAE,eAAeQ,MAAM,WAIrB,IAHgBR,EAAE,SAASS,QAIzB,OAAO,EAITT,EAAEU,KAAK,MAETV,EAAE,cAAcW,IAAI,OAAQ,QAAS,WACnC,IAAIC,EAAOZ,EAAE,6BACTM,EAAQM,EAAKN,MAAMN,EAAEE,OACrBW,EAAMb,EAAEY,EAAKE,IAAIR,IAAQS,SAASX,WAAWY,OAAOC,KAAK,QAE7D,GAA6B,KAAzBjB,EAAEE,MAAMgB,MAAMC,OAChB,OAAO,EAGT,OAAQb,GACN,KAAK,EACHO,EAAIO,KAAK,UACT,MAEF,KAAK,EACHP,EAAIO,KAAK,SAASJ,UAqDxBhB,EAAEqB,UAAUC,UAAU,SAAU,SAAUC,EAAOC,GAG/C,OAAOtB,KAAKuB,SAASD,IAFL,2EAE2BE,KAAKH,IADjC,gDACoDG,KAAKH,IACvE,WA7CHvB,EAAE,SAAS2B,SAAS,CAClBC,MAAO,CACLC,SAAU,CACRC,UAAU,EACVC,QAAQ,GAEVC,SAAU,CACRF,UAAU,IAGdG,SAAU,CACRJ,SAAU,CACRC,SAAU,WAEZE,SAAU,CACRF,SAAU,WAGdI,eAAgB,SAAwBC,EAAOX,GAC7C,IAAIY,EAAYD,EAAM,GAAGE,UACzBb,EAAQc,IAAI,CACVC,YAAa,YAEff,EAAQpB,SAAS,eAAeY,OAChCQ,EAAQT,SAASX,SAAS,cAAcY,OAAOwB,SAAS,QAAQpB,KAAKgB,IAEvEK,YAAa,SAAqBjB,GAChCxB,EAAEwB,GAASc,IAAI,CACbC,YAAa,SAEfvC,EAAEwB,GAASpB,SAAS,eAAesC,OACnC1C,EAAEwB,GAAST,SAASX,SAAS,cAAcsC","file":"login-c8cfd71156.js","sourcesContent":["\"use strict\";\n\n;\n;\n\n(function () {\n  $(function () {\n    init();\n  });\n  /**\r\n   * 初始化的函数\r\n   */\n\n  function init() {\n    qr_account_hover_switch();\n    validate();\n  }\n  /**\r\n   * 二维码等录和账号登录切换\r\n   */\n\n\n  function qr_account_hover_switch() {\n    // 事件绑定\n    $(\".tab-nav-item\").on(\"click\", function () {\n      $(this).addClass(\"active\").siblings().removeClass(\"active\"); // 获取active状态的下标\n\n      var index = $(\".tab-nav-item\").index($(this));\n      $(\".login_content\").addClass(\"l-hide\").eq(index).removeClass(\"l-hide\");\n    });\n  }\n\n  function bindEventValidate() {\n    // 表单提交的时候也需要验证一次\n    $(\"#submit-btn\").click(function () {\n      var isChecked = $(\"#form\").valid();\n      ;\n\n      if (!isChecked) {\n        return false;\n      } // 如果验证成功我们就发送ajax请求\n\n\n      $.ajax({});\n    });\n    $(\".form-item\").one(\"blur\", \"input\", function () {\n      var ipts = $(\".ui-form-item-group input\");\n      var index = ipts.index($(this));\n      var ele = $(ipts.get(index)).parent().siblings().show().find(\".txt\");\n\n      if ($(this).val().trim() !== \"\") {\n        return false;\n      }\n\n      switch (index) {\n        case 0:\n          ele.html(\"请输入登录名\");\n          break;\n\n        case 1:\n          ele.html(\"请输入密码\").show();\n      }\n    });\n  }\n  /**\r\n   * 表单验证\r\n   */\n\n\n  function validate() {\n    bindEventValidate();\n    customValidate();\n    $(\"#form\").validate({\n      rules: {\n        username: {\n          required: true,\n          format: true\n        },\n        password: {\n          required: true\n        }\n      },\n      messages: {\n        username: {\n          required: \"用户名不能为空\"\n        },\n        password: {\n          required: \"密码不能为空\"\n        }\n      },\n      errorPlacement: function errorPlacement(error, element) {\n        var errorText = error[0].innerHTML;\n        element.css({\n          borderColor: \"#f64a4a\"\n        });\n        element.siblings(\".icon-error\").show();\n        element.parent().siblings(\".error_msg\").show().children(\"span\").html(errorText);\n      },\n      unhighlight: function unhighlight(element, errorClass, validClass) {\n        $(element).css({\n          borderColor: \"#666\"\n        });\n        $(element).siblings(\".icon-error\").hide();\n        $(element).parent().siblings(\".error_msg\").hide();\n      }\n    });\n  }\n  /**\r\n   * 自定义邮箱，手机号码的正则验证\r\n   */\n\n\n  function customValidate() {\n    $.validator.addMethod(\"format\", function (value, element) {\n      var regMobile = /^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|(147))\\d{8}$/;\n      var regEmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n      return this.optional(element) || regMobile.test(value) || regEmail.test(value);\n    }, \"用户名格式错误\");\n  }\n})();"]}
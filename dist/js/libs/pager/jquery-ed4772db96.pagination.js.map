{"version":3,"sources":["libs/pager/jquery.pagination.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","factory","define","amd","cmd","jQuery","module","exports","root","undefined","window","require","$","Pagination","element","options","current","opts","$document","document","$obj","this","setPageCount","page","pageCount","getPageCount","totalData","showData","Math","ceil","parseInt","getCurrent","filling","index","html","mode","prevCls","prevContent","coping","home","homePage","start","count","end","activeCls","endPage","nextCls","nextContent","keepShowPN","find","remove","jump","jumpIptCls","jumpBtnCls","jumpBtn","empty","eventBind","that","off","on","hasClass","text","addClass","val","data","callback","$this","reg","test","replace","keydown","e","keyCode","init","isHide","hide","show","defaults","fn","pagination","parameter","extend","each"],"mappings":"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","file":"jquery-ed4772db96.pagination.js","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\r\n * pagination.js 1.5.1\r\n * A jQuery plugin to provide simple yet fully customisable pagination.\r\n * @version 1.5.1\r\n * @author mss\r\n * @url https://github.com/Maxiaoxiang/jQuery-plugins\r\n *\r\n * @调用方法\r\n * $(selector).pagination(option, callback);\r\n * -此处callback是初始化调用，option里的callback是点击页码后调用\r\n * \r\n * -- example --\r\n * $(selector).pagination({\r\n *     ... // 配置参数\r\n *     callback: function(api) {\r\n *         console.log('点击页码调用该回调'); //切换页码时执行一次回调\r\n *     }\r\n * }, function(){\r\n *     console.log('初始化'); //插件初始化时调用该方法，比如请求第一次接口来初始化分页配置\r\n * });\r\n */\n;\n\n(function (factory) {\n  if (typeof define === \"function\" && (define.amd || define.cmd) && !jQuery) {\n    // AMD或CMD\n    define([\"jquery\"], factory);\n  } else if ((typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === 'object' && module.exports) {\n    // Node/CommonJS\n    module.exports = function (root, jQuery) {\n      if (jQuery === undefined) {\n        if (typeof window !== 'undefined') {\n          jQuery = require('jquery');\n        } else {\n          jQuery = require('jquery')(root);\n        }\n      }\n\n      factory(jQuery);\n      return jQuery;\n    };\n  } else {\n    //Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  //配置参数\n  var defaults = {\n    totalData: 0,\n    //数据总条数\n    showData: 0,\n    //每页显示的条数\n    pageCount: 9,\n    //总页数,默认为9\n    current: 1,\n    //当前第几页\n    prevCls: 'prev',\n    //上一页class\n    nextCls: 'next',\n    //下一页class\n    prevContent: '<',\n    //上一页内容\n    nextContent: '>',\n    //下一页内容\n    activeCls: 'active',\n    //当前页选中状态\n    coping: false,\n    //首页和尾页\n    isHide: false,\n    //当前页数为0页或者1页时不显示分页\n    homePage: '',\n    //首页节点内容\n    endPage: '',\n    //尾页节点内容\n    keepShowPN: false,\n    //是否一直显示上一页下一页\n    mode: 'unfixed',\n    //分页模式，unfixed：不固定页码数量，fixed：固定页码数量\n    count: 4,\n    //mode为unfixed时显示当前选中页前后页数，mode为fixed显示页码总数\n    jump: false,\n    //跳转到指定页数\n    jumpIptCls: 'jump-ipt',\n    //文本框内容\n    jumpBtnCls: 'jump-btn',\n    //跳转按钮\n    jumpBtn: '跳转',\n    //跳转按钮文本\n    callback: function callback() {} //回调\n\n  };\n\n  var Pagination = function Pagination(element, options) {\n    //全局变量\n    var opts = options,\n        //配置\n    current,\n        //当前页\n    $document = $(document),\n        $obj = $(element); //容器\n\n    /**\r\n     * 设置总页数\r\n     * @param {int} page 页码\r\n     * @return opts.pageCount 总页数配置\r\n     */\n\n    this.setPageCount = function (page) {\n      return opts.pageCount = page;\n    };\n    /**\r\n     * 获取总页数\r\n     * 如果配置了总条数和每页显示条数，将会自动计算总页数并略过总页数配置，反之\r\n     * @return {int} 总页数\r\n     */\n\n\n    this.getPageCount = function () {\n      return opts.totalData && opts.showData ? Math.ceil(parseInt(opts.totalData) / opts.showData) : opts.pageCount;\n    };\n    /**\r\n     * 获取当前页\r\n     * @return {int} 当前页码\r\n     */\n\n\n    this.getCurrent = function () {\n      return current;\n    };\n    /**\r\n     * 填充数据\r\n     * @param {int} 页码\r\n     */\n\n\n    this.filling = function (index) {\n      var html = '';\n      current = parseInt(index) || parseInt(opts.current); //当前页码\n\n      var pageCount = this.getPageCount(); //获取的总页数\n\n      switch (opts.mode) {\n        //配置模式\n        case 'fixed':\n          //固定按钮模式\n          html += '<a href=\"javascript:;\" class=\"' + opts.prevCls + '\">' + opts.prevContent + '</a>';\n\n          if (opts.coping) {\n            var home = opts.coping && opts.homePage ? opts.homePage : '1';\n            html += '<a href=\"javascript:;\" data-page=\"1\">' + home + '</a>';\n          }\n\n          var start = current > opts.count - 1 ? current + opts.count - 1 > pageCount ? current - (opts.count - (pageCount - current)) : current - 2 : 1;\n          var end = current + opts.count - 1 > pageCount ? pageCount : start + opts.count;\n\n          for (; start <= end; start++) {\n            if (start != current) {\n              html += '<a href=\"javascript:;\" data-page=\"' + start + '\">' + start + '</a>';\n            } else {\n              html += '<span class=\"' + opts.activeCls + '\">' + start + '</span>';\n            }\n          }\n\n          if (opts.coping) {\n            var _end = opts.coping && opts.endPage ? opts.endPage : pageCount;\n\n            html += '<a href=\"javascript:;\" data-page=\"' + pageCount + '\">' + _end + '</a>';\n          }\n\n          html += '<a href=\"javascript:;\" class=\"' + opts.nextCls + '\">' + opts.nextContent + '</a>';\n          break;\n\n        case 'unfixed':\n          //不固定按钮模式\n          if (opts.keepShowPN || current > 1) {\n            //上一页\n            html += '<a href=\"javascript:;\" class=\"' + opts.prevCls + '\">' + opts.prevContent + '</a>';\n          } else {\n            if (opts.keepShowPN == false) {\n              $obj.find('.' + opts.prevCls) && $obj.find('.' + opts.prevCls).remove();\n            }\n          }\n\n          if (current >= opts.count + 2 && current != 1 && pageCount != opts.count) {\n            var home = opts.coping && opts.homePage ? opts.homePage : '1';\n            html += opts.coping ? '<a href=\"javascript:;\" data-page=\"1\">' + home + '</a><span>...</span>' : '';\n          }\n\n          var start = current - opts.count <= 1 ? 1 : current - opts.count;\n          var end = current + opts.count >= pageCount ? pageCount : current + opts.count;\n\n          for (; start <= end; start++) {\n            if (start <= pageCount && start >= 1) {\n              if (start != current) {\n                html += '<a href=\"javascript:;\" data-page=\"' + start + '\">' + start + '</a>';\n              } else {\n                html += '<span class=\"' + opts.activeCls + '\">' + start + '</span>';\n              }\n            }\n          }\n\n          if (current + opts.count < pageCount && current >= 1 && pageCount > opts.count) {\n            var end = opts.coping && opts.endPage ? opts.endPage : pageCount;\n            html += opts.coping ? '<span>...</span><a href=\"javascript:;\" data-page=\"' + pageCount + '\">' + end + '</a>' : '';\n          }\n\n          if (opts.keepShowPN || current < pageCount) {\n            //下一页\n            html += '<a href=\"javascript:;\" class=\"' + opts.nextCls + '\">' + opts.nextContent + '</a>';\n          } else {\n            if (opts.keepShowPN == false) {\n              $obj.find('.' + opts.nextCls) && $obj.find('.' + opts.nextCls).remove();\n            }\n          }\n\n          break;\n\n        case 'easy':\n          //简单模式\n          break;\n\n        default:\n      }\n\n      html += opts.jump ? '<input type=\"text\" class=\"' + opts.jumpIptCls + '\"><a href=\"javascript:;\" class=\"' + opts.jumpBtnCls + '\">' + opts.jumpBtn + '</a>' : '';\n      $obj.empty().html(html);\n    }; //绑定事件\n\n\n    this.eventBind = function () {\n      var that = this;\n      var pageCount = that.getPageCount(); //总页数\n\n      var index = 1;\n      $obj.off().on('click', 'a', function () {\n        if ($(this).hasClass(opts.nextCls)) {\n          if ($obj.find('.' + opts.activeCls).text() >= pageCount) {\n            $(this).addClass('disabled');\n            return false;\n          } else {\n            index = parseInt($obj.find('.' + opts.activeCls).text()) + 1;\n          }\n        } else if ($(this).hasClass(opts.prevCls)) {\n          if ($obj.find('.' + opts.activeCls).text() <= 1) {\n            $(this).addClass('disabled');\n            return false;\n          } else {\n            index = parseInt($obj.find('.' + opts.activeCls).text()) - 1;\n          }\n        } else if ($(this).hasClass(opts.jumpBtnCls)) {\n          if ($obj.find('.' + opts.jumpIptCls).val() !== '') {\n            index = parseInt($obj.find('.' + opts.jumpIptCls).val());\n          } else {\n            return;\n          }\n        } else {\n          index = parseInt($(this).data('page'));\n        }\n\n        that.filling(index);\n        typeof opts.callback === 'function' && opts.callback(that);\n      }); //输入跳转的页码\n\n      $obj.on('input propertychange', '.' + opts.jumpIptCls, function () {\n        var $this = $(this);\n        var val = $this.val();\n        var reg = /[^\\d]/g;\n        if (reg.test(val)) $this.val(val.replace(reg, ''));\n        parseInt(val) > pageCount && $this.val(pageCount);\n        if (parseInt(val) === 0) $this.val(1); //最小值为1\n      }); //回车跳转指定页码\n\n      $document.keydown(function (e) {\n        if (e.keyCode == 13 && $obj.find('.' + opts.jumpIptCls).val()) {\n          var index = parseInt($obj.find('.' + opts.jumpIptCls).val());\n          that.filling(index);\n          typeof opts.callback === 'function' && opts.callback(that);\n        }\n      });\n    }; //初始化\n\n\n    this.init = function () {\n      this.filling(opts.current);\n      this.eventBind();\n\n      if (opts.isHide && this.getPageCount() == '1' || this.getPageCount() == '0') {\n        $obj.hide();\n      } else {\n        $obj.show();\n      }\n    };\n\n    this.init();\n  };\n\n  $.fn.pagination = function (parameter, callback) {\n    if (typeof parameter == 'function') {\n      //重载\n      callback = parameter;\n      parameter = {};\n    } else {\n      parameter = parameter || {};\n\n      callback = callback || function () {};\n    }\n\n    var options = $.extend({}, defaults, parameter);\n    return this.each(function () {\n      var pagination = new Pagination(this, options);\n      callback(pagination);\n    });\n  };\n});"]}